{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Board.js\";\nimport React, { useState } from \"react\";\nimport BoardRow from \"./BoardRow\";\nimport '../styling/Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n/*\nconst BOARD_WIDTH = 6;\nconst BOARD_HEIGHT = 6;\n\nconst initializeEmptyBoard = () => {\n    let board = []\n\n    for (let cols = 0; cols < BOARD_WIDTH; cols++) {\n        board.push([]);\n\n        for (let rows = 0; rows < BOARD_HEIGHT; rows++) {\n            board[cols].push({x:cols, y:rows, isOccupied:false});\n        }\n    }\n\n    return board\n}\n\nconst Board = () => {\n    const [boardState, setBoardState] = useState(initializeEmptyBoard());\n\n    const updateBoardState = (xCoord, yCoord, isOccupied) => {\n        let newState = boardState;\n        newState[xCoord][yCoord].isOccupied = isOccupied;\n\n        setBoardState(newState);\n    }\n\n    return (\n        <table className='board'>\n            <tbody className='board__tbody'>\n                <BoardRow ids={boardState[0]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[1]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[2]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[3]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[4]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[5]} updateBoardState={updateBoardState} />\n            </tbody>\n        </table>\n    )\n}\n*/\n\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","BoardRow","Board"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA/CMA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport BoardRow from \"./BoardRow\"\nimport '../styling/Board.css'\n\nconst Board = () => {\n    return (\n        <div className='board'></div>\n    )\n}\n\n/*\nconst BOARD_WIDTH = 6;\nconst BOARD_HEIGHT = 6;\n\nconst initializeEmptyBoard = () => {\n    let board = []\n\n    for (let cols = 0; cols < BOARD_WIDTH; cols++) {\n        board.push([]);\n\n        for (let rows = 0; rows < BOARD_HEIGHT; rows++) {\n            board[cols].push({x:cols, y:rows, isOccupied:false});\n        }\n    }\n\n    return board\n}\n\nconst Board = () => {\n    const [boardState, setBoardState] = useState(initializeEmptyBoard());\n\n    const updateBoardState = (xCoord, yCoord, isOccupied) => {\n        let newState = boardState;\n        newState[xCoord][yCoord].isOccupied = isOccupied;\n\n        setBoardState(newState);\n    }\n\n    return (\n        <table className='board'>\n            <tbody className='board__tbody'>\n                <BoardRow ids={boardState[0]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[1]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[2]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[3]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[4]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[5]} updateBoardState={updateBoardState} />\n            </tbody>\n        </table>\n    )\n}\n*/\nexport default Board"]},"metadata":{},"sourceType":"module"}