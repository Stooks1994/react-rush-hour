{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Piece.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable'; //const BOARD_PX = document.getElementById('main-board').getBoundingClientRect.width;\n//console.log(BOARD_PX);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 6;\nconst SIZE_MOD = 100 / BOARD_SIZE;\n\nconst preparePiece = (id, x, y, h, w, axis, color, coordHandler) => {\n  let xPos = x * SIZE_MOD;\n  let yPos = y * SIZE_MOD;\n  let height = h * SIZE_MOD;\n  let width = w * SIZE_MOD;\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    axis: axis,\n    bounds: \"parent\",\n    onStop: coordHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      style: {\n        position: 'absolute',\n        left: `${xPos}%`,\n        top: `${yPos}%`,\n        height: `${height}%`,\n        width: `${width}%`,\n        backgroundColor: `${color}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\nconst Piece = props => {\n  _s();\n\n  const [currX, setCurrX] = useState(props.pieceProps.x);\n  const [currY, setCurrY] = useState(props.pieceProps.y);\n\n  const passNewCoordsToParent = () => {\n    let boardPx = document.getElementById('main-board').getBoundingClientRect().width;\n    let transform = document.getElementById(props.pieceProps.id).style.transform;\n    let vals = transform.match(/[0-9]+/);\n    console.log(typeof transform);\n    console.log(vals); //props.updateCoords(props.pieceProps.id, currX, currY);\n  };\n\n  let currPiece = props.pieceProps.orientation == 'HORIZONTAL' ? preparePiece(props.pieceProps.id, currX, currY, 1, props.pieceProps.size, 'x', props.pieceProps.color, passNewCoordsToParent) : preparePiece(props.pieceProps.id, currX, currY, props.pieceProps.size, 1, 'y', props.pieceProps.color, passNewCoordsToParent);\n  return currPiece;\n};\n\n_s(Piece, \"/A3MDO/EzisF3q3SKiJ9PBrtAyo=\");\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Piece.js"],"names":["React","useState","Draggable","BOARD_SIZE","SIZE_MOD","preparePiece","id","x","y","h","w","axis","color","coordHandler","xPos","yPos","height","width","position","left","top","backgroundColor","Piece","props","currX","setCurrX","pieceProps","currY","setCurrY","passNewCoordsToParent","boardPx","document","getElementById","getBoundingClientRect","transform","style","vals","match","console","log","currPiece","orientation","size"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CAEA;AACA;;;AACA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,QAAQ,GAAG,MAAMD,UAAvB;;AAEA,MAAME,YAAY,GAAG,CAACC,EAAD,EAAKC,CAAL,EAAQC,CAAR,EAAWC,CAAX,EAAcC,CAAd,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,KAA+C;AAChE,MAAIC,IAAI,GAAGP,CAAC,GAAGH,QAAf;AACA,MAAIW,IAAI,GAAGP,CAAC,GAAGJ,QAAf;AACA,MAAIY,MAAM,GAAGP,CAAC,GAAGL,QAAjB;AACA,MAAIa,KAAK,GAAGP,CAAC,GAAGN,QAAhB;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAEO,IAAjB;AAAuB,IAAA,MAAM,EAAC,QAA9B;AAAuC,IAAA,MAAM,EAAEE,YAA/C;AAAA,2BACI;AAAK,MAAA,EAAE,EAAEP,EAAT;AAAa,MAAA,KAAK,EAAE;AAChBY,QAAAA,QAAQ,EAAC,UADO;AAEhBC,QAAAA,IAAI,EAAE,GAAEL,IAAK,GAFG;AAGhBM,QAAAA,GAAG,EAAE,GAAEL,IAAK,GAHI;AAIhBC,QAAAA,MAAM,EAAE,GAAEA,MAAO,GAJD;AAKhBC,QAAAA,KAAK,EAAE,GAAEA,KAAM,GALC;AAMhBI,QAAAA,eAAe,EAAE,GAAET,KAAM;AANT;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlBD;;AAoBA,MAAMU,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAACsB,KAAK,CAACG,UAAN,CAAiBnB,CAAlB,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAACsB,KAAK,CAACG,UAAN,CAAiBlB,CAAlB,CAAlC;;AAEA,QAAMqB,qBAAqB,GAAG,MAAM;AAChC,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DhB,KAA5E;AACA,QAAIiB,SAAS,GAAGH,QAAQ,CAACC,cAAT,CAAwBT,KAAK,CAACG,UAAN,CAAiBpB,EAAzC,EAA6C6B,KAA7C,CAAmDD,SAAnE;AACA,QAAIE,IAAI,GAAGF,SAAS,CAACG,KAAV,CAAgB,QAAhB,CAAX;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOL,SAAnB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EANgC,CAOhC;AACH,GARD;;AAUA,MAAII,SAAS,GAAGjB,KAAK,CAACG,UAAN,CAAiBe,WAAjB,IAAgC,YAAhC,GACVpC,YAAY,CAACkB,KAAK,CAACG,UAAN,CAAiBpB,EAAlB,EAAsBkB,KAAtB,EAA6BG,KAA7B,EAAoC,CAApC,EAAuCJ,KAAK,CAACG,UAAN,CAAiBgB,IAAxD,EAA8D,GAA9D,EAAmEnB,KAAK,CAACG,UAAN,CAAiBd,KAApF,EAA2FiB,qBAA3F,CADF,GAEVxB,YAAY,CAACkB,KAAK,CAACG,UAAN,CAAiBpB,EAAlB,EAAsBkB,KAAtB,EAA6BG,KAA7B,EAAoCJ,KAAK,CAACG,UAAN,CAAiBgB,IAArD,EAA2D,CAA3D,EAA8D,GAA9D,EAAmEnB,KAAK,CAACG,UAAN,CAAiBd,KAApF,EAA2FiB,qBAA3F,CAFlB;AAIA,SAAOW,SAAP;AACH,CAnBD;;GAAMlB,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Draggable from 'react-draggable';\n\n//const BOARD_PX = document.getElementById('main-board').getBoundingClientRect.width;\n//console.log(BOARD_PX);\nconst BOARD_SIZE = 6;\nconst SIZE_MOD = 100 / BOARD_SIZE;\n\nconst preparePiece = (id, x, y, h, w, axis, color, coordHandler) => {\n    let xPos = x * SIZE_MOD;\n    let yPos = y * SIZE_MOD;\n    let height = h * SIZE_MOD;\n    let width = w * SIZE_MOD;\n\n    return (\n        <Draggable axis={axis} bounds='parent' onStop={coordHandler}>\n            <div id={id} style={{\n                position:'absolute', \n                left:`${xPos}%`, \n                top:`${yPos}%`, \n                height:`${height}%`, \n                width:`${width}%`, \n                backgroundColor:`${color}`,\n            }} />\n        </Draggable>\n    )\n}\n\nconst Piece = props => {\n    const [currX, setCurrX] = useState(props.pieceProps.x);\n    const [currY, setCurrY] = useState(props.pieceProps.y);\n\n    const passNewCoordsToParent = () => {\n        let boardPx = document.getElementById('main-board').getBoundingClientRect().width\n        let transform = document.getElementById(props.pieceProps.id).style.transform\n        let vals = transform.match(/[0-9]+/)\n\n        console.log(typeof transform)\n        console.log(vals)\n        //props.updateCoords(props.pieceProps.id, currX, currY);\n    }\n\n    let currPiece = props.pieceProps.orientation == 'HORIZONTAL' \n        ? preparePiece(props.pieceProps.id, currX, currY, 1, props.pieceProps.size, 'x', props.pieceProps.color, passNewCoordsToParent)\n        : preparePiece(props.pieceProps.id, currX, currY, props.pieceProps.size, 1, 'y', props.pieceProps.color, passNewCoordsToParent);\n\n    return currPiece;\n}\n\nexport default Piece;"]},"metadata":{},"sourceType":"module"}