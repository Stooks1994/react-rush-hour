{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tile from './Tile';\n\nconst Board = props => {\n  _s();\n\n  const [boardArray, setBoardArray] = useState([]);\n  /*\n  const initializeTiles = (x, y) => {\n      let tiles = [];\n       for (let i = 0; i < x; i++) {\n          for (let j = 0; j < y; j++) {\n              tiles.push(<Tile coords={{x:i, y:j}}/>)\n          }\n      }\n       return tiles;\n  }\n   const createAndPopulateBoard = (x, allTiles) => {\n      let board = [];\n       for (let i = 0; i < x; i++) {\n          board.push(<div>{allTiles.filter(tile => tile.coords.x == i)}</div>)\n      }\n       return board;\n  }\n   const startingTiles = initializeTiles(props.boardSize.x, props.boardSize.y);\n  const [tiles, setTiles] = useState(startingTiles);\n   return (\n      <div>\n          {createAndPopulateBoard(props.boardSize.x, tiles)}\n      </div>\n  )\n  */\n};\n\n_s(Board, \"NH8jYL0g6jSDYV6EmTwOQ/F+HfU=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","Tile","Board","props","boardArray","setBoardArray"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQC,CAnCD;;GAAME,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport Tile from './Tile'\n\nconst Board = props => {\n    const [boardArray, setBoardArray] = useState([]);\n\n    /*\n    const initializeTiles = (x, y) => {\n        let tiles = [];\n\n        for (let i = 0; i < x; i++) {\n            for (let j = 0; j < y; j++) {\n                tiles.push(<Tile coords={{x:i, y:j}}/>)\n            }\n        }\n\n        return tiles;\n    }\n\n    const createAndPopulateBoard = (x, allTiles) => {\n        let board = [];\n\n        for (let i = 0; i < x; i++) {\n            board.push(<div>{allTiles.filter(tile => tile.coords.x == i)}</div>)\n        }\n\n        return board;\n    }\n\n    const startingTiles = initializeTiles(props.boardSize.x, props.boardSize.y);\n    const [tiles, setTiles] = useState(startingTiles);\n\n    return (\n        <div>\n            {createAndPopulateBoard(props.boardSize.x, tiles)}\n        </div>\n    )\n    */\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}