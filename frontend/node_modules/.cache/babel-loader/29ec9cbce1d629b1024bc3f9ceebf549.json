{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/BoardRow.js\";\nimport Tile from './Tile';\nimport '../styling/BoardRow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst updateBoardState = (xCoord, yCoord, isOccupied) => {\n  props.updateBoardState(xCoord, yCoord, isOccupied);\n};\n\nconst BoardRow = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[0],\n      updateBoardState: updateBoardState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      coords: props.ids[5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BoardRow;\nexport default BoardRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardRow\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/BoardRow.js"],"names":["Tile","updateBoardState","xCoord","yCoord","isOccupied","props","BoardRow","ids"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,UAAjB,KAAgC;AACrDC,EAAAA,KAAK,CAACJ,gBAAN,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,UAAvC;AACH,CAFD;;AAIA,MAAME,QAAQ,GAAID,KAAD,IAAW;AACxB,sBACI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEA,KAAK,CAACE,GAAN,CAAU,CAAV,CAAd;AAA4B,MAAA,gBAAgB,EAAEN;AAA9C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEI,KAAK,CAACE,GAAN,CAAU,CAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,KAAK,CAACE,GAAN,CAAU,CAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,KAAK,CAACE,GAAN,CAAU,CAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,KAAK,CAACE,GAAN,CAAU,CAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEF,KAAK,CAACE,GAAN,CAAU,CAAV;AAAd;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMD,Q;AAaN,eAAeA,QAAf","sourcesContent":["import Tile from './Tile'\nimport '../styling/BoardRow.css'\n\nconst updateBoardState = (xCoord, yCoord, isOccupied) => {\n    props.updateBoardState(xCoord, yCoord, isOccupied);\n}\n\nconst BoardRow = (props) => {\n    return (\n        <tr className='row'>\n            <Tile coords={props.ids[0]} updateBoardState={updateBoardState} />\n            <Tile coords={props.ids[1]} />\n            <Tile coords={props.ids[2]} />\n            <Tile coords={props.ids[3]} />\n            <Tile coords={props.ids[4]} />\n            <Tile coords={props.ids[5]} />\n        </tr>\n    )\n}\n\nexport default BoardRow"]},"metadata":{},"sourceType":"module"}