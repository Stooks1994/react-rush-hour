{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  _s();\n\n  const initializeTiles = (x, y) => {\n    let tiles = [];\n\n    for (let i = 0; i < x; i++) {\n      for (let j = 0; j < y; j++) {\n        tiles.push( /*#__PURE__*/_jsxDEV(Tile, {\n          coords: {\n            x: i,\n            y: j\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 28\n        }, this));\n      }\n    }\n\n    return tiles;\n  };\n\n  const createAndPopulateBoard = (x, y, allTiles) => {\n    let board = [];\n\n    for (let i = 0; i < x; i++) {\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allTiles.filter(tile => tile.coords.x == i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this));\n    }\n\n    return board;\n  };\n\n  const startingTiles = initializeTiles(props.boardSize.x, props.boardSize.y);\n  const [tiles, setTiles] = useState(startingTiles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tiles.map(tile => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"Vl4lcf/x0fRFslf+ViJwafp/0Es=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","Tile","Board","props","initializeTiles","x","y","tiles","i","j","push","createAndPopulateBoard","allTiles","board","filter","tile","coords","startingTiles","boardSize","setTiles","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAMC,eAAe,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AACxBF,QAAAA,KAAK,CAACG,IAAN,eAAW,QAAC,IAAD;AAAM,UAAA,MAAM,EAAE;AAACL,YAAAA,CAAC,EAACG,CAAH;AAAMF,YAAAA,CAAC,EAACG;AAAR;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAX;AACH;AACJ;;AAED,WAAOF,KAAP;AACH,GAVD;;AAYA,QAAMI,sBAAsB,GAAG,CAACN,CAAD,EAAIC,CAAJ,EAAOM,QAAP,KAAoB;AAC/C,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AACxBK,MAAAA,KAAK,CAACH,IAAN,eAAW;AAAA,kBAAME,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYX,CAAZ,IAAiBG,CAAzC;AAAN;AAAA;AAAA;AAAA;AAAA,cAAX;AACH;;AAED,WAAOK,KAAP;AACH,GARD;;AAUA,QAAMI,aAAa,GAAGb,eAAe,CAACD,KAAK,CAACe,SAAN,CAAgBb,CAAjB,EAAoBF,KAAK,CAACe,SAAN,CAAgBZ,CAApC,CAArC;AACA,QAAM,CAACC,KAAD,EAAQY,QAAR,IAAoBnB,QAAQ,CAACiB,aAAD,CAAlC;AAEA,sBACI;AAAA,cACKV,KAAK,CAACa,GAAN,CAAUL,IAAI,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/BD;;GAAMb,K;;KAAAA,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport Tile from './Tile'\n\nconst Board = props => {\n    const initializeTiles = (x, y) => {\n        let tiles = [];\n\n        for (let i = 0; i < x; i++) {\n            for (let j = 0; j < y; j++) {\n                tiles.push(<Tile coords={{x:i, y:j}}/>)\n            }\n        }\n\n        return tiles;\n    }\n\n    const createAndPopulateBoard = (x, y, allTiles) => {\n        let board = [];\n\n        for (let i = 0; i < x; i++) {\n            board.push(<div>{allTiles.filter(tile => tile.coords.x == i)}</div>)\n        }\n\n        return board;\n    }\n\n    const startingTiles = initializeTiles(props.boardSize.x, props.boardSize.y);\n    const [tiles, setTiles] = useState(startingTiles);\n\n    return (\n        <div>\n            {tiles.map(tile => <div>{tile}</div>)}\n        </div>\n    )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}