{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tile from './Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  _s();\n\n  const [tiles, setTiles] = useState({});\n\n  const initializeTiles = (x, y) => {\n    for (let i = 0; i < x; i++) {\n      for (let j = 0; j < y; j++) {\n        tiles.push( /*#__PURE__*/_jsxDEV(Tile, {\n          coords: {\n            x: i,\n            y: j\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 28\n        }, this));\n      }\n    }\n  };\n\n  initializeTiles(props.boardSize.x, props.boardSize.y);\n  return {\n    tiles\n  };\n};\n\n_s(Board, \"YMsH3Jbf38kl1dbl77HMtuWmh9M=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","Tile","Board","props","tiles","setTiles","initializeTiles","x","y","i","j","push","boardSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,eAAe,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxBN,QAAAA,KAAK,CAACO,IAAN,eAAW,QAAC,IAAD;AAAM,UAAA,MAAM,EAAE;AAACJ,YAAAA,CAAC,EAACE,CAAH;AAAMD,YAAAA,CAAC,EAACE;AAAR;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAX;AACH;AACJ;AACJ,GAND;;AAQAJ,EAAAA,eAAe,CAACH,KAAK,CAACS,SAAN,CAAgBL,CAAjB,EAAoBJ,KAAK,CAACS,SAAN,CAAgBJ,CAApC,CAAf;AAEA,SACI;AAACJ,IAAAA;AAAD,GADJ;AAGH,CAhBD;;GAAMF,K;;KAAAA,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport Tile from './Tile'\n\nconst Board = props => {\n    const [tiles, setTiles] = useState({});\n\n    const initializeTiles = (x, y) => {\n        for (let i = 0; i < x; i++) {\n            for (let j = 0; j < y; j++) {\n                tiles.push(<Tile coords={{x:i, y:j}}/>)\n            }\n        }\n    }\n\n    initializeTiles(props.boardSize.x, props.boardSize.y);\n\n    return (\n        {tiles}\n    )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}