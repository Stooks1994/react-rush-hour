{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Piece from \"./Piece\";\nimport '../styling/Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 6;\nconst TEST_PUZZLE = {\n  pieces: [{\n    id: 0,\n    x: 0,\n    y: 2,\n    h: 1,\n    w: 2,\n    orientation: 'HORIZONTAL',\n    color: 'red'\n  }, {\n    id: 1,\n    x: 2,\n    y: 0,\n    h: 3,\n    w: 1,\n    orientation: 'VERTICAL',\n    color: 'blue'\n  }, {\n    id: 2,\n    x: 0,\n    y: 3,\n    h: 1,\n    w: 3,\n    orientation: 'HORIZONTAL',\n    color: 'green'\n  }, {\n    id: 3,\n    x: 5,\n    y: 3,\n    h: 3,\n    w: 1,\n    orientation: 'VERTICAL',\n    color: 'teal'\n  }]\n};\n/*\nconst TEST_PUZZLE = {\n    pieces: [\n        {id:0, x:0, y:0, h:1, w:2, orientation: 'HORIZONTAL', color:'red'},\n        {id:1, x:0, y:1, h:2, w:1, orientation: 'VERTICAL', color:'pink'},\n        {id:2, x:3, y:5, h:1, w:3, orientation: 'HORIZONTAL', color:'blue'},\n        {id:3, x:5, y:0, h:1, w:1, orientation: 'HORIZONTAL', color:'green'}\n    ]\n};\n*/\n\nconst Board = () => {\n  _s();\n\n  const [isMounted, setIsMounted] = useState(false);\n  const [piecesOnBoard, setPiecesOnBoard] = useState(TEST_PUZZLE.pieces);\n\n  const populateBoardFromPuzzle = puzzlePieces => {\n    return puzzlePieces.map(piece => /*#__PURE__*/_jsxDEV(Piece, {\n      pieceProps: piece,\n      allPieces: puzzlePieces,\n      onFinishedDragging: updatePiecesOnBoard\n    }, piece.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this));\n  };\n\n  const updatePiecesOnBoard = (id, newBin) => {\n    setPiecesOnBoard(prevState => {\n      let newState = prevState.slice();\n      newState.forEach(element => {\n        if (element.id === id) {\n          if (element.orientation == 'HORIZONTAL') {\n            element.x = newBin;\n          } else if (element.orientation == 'VERTICAL') {\n            console.log(newBin);\n            element.y = newBin;\n          }\n        }\n      });\n      return newState;\n    });\n  };\n\n  useEffect(() => {\n    setIsMounted(true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-board\",\n    className: \"board\",\n    children: isMounted && populateBoardFromPuzzle(piecesOnBoard)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"zAFtJFYbTGTJjq59x0HkrQeWqqI=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","useEffect","Piece","BOARD_SIZE","TEST_PUZZLE","pieces","id","x","y","h","w","orientation","color","Board","isMounted","setIsMounted","piecesOnBoard","setPiecesOnBoard","populateBoardFromPuzzle","puzzlePieces","map","piece","updatePiecesOnBoard","newBin","prevState","newState","slice","forEach","element","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAnB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,CACJ;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC,CAAxB;AAA2BC,IAAAA,WAAW,EAAC,YAAvC;AAAqDC,IAAAA,KAAK,EAAC;AAA3D,GADI,EAEJ;AAACN,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC,CAAxB;AAA2BC,IAAAA,WAAW,EAAC,UAAvC;AAAmDC,IAAAA,KAAK,EAAC;AAAzD,GAFI,EAGJ;AAACN,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC,CAAxB;AAA2BC,IAAAA,WAAW,EAAC,YAAvC;AAAqDC,IAAAA,KAAK,EAAC;AAA3D,GAHI,EAIJ;AAACN,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC,CAAd;AAAiBC,IAAAA,CAAC,EAAC,CAAnB;AAAsBC,IAAAA,CAAC,EAAC,CAAxB;AAA2BC,IAAAA,WAAW,EAAC,UAAvC;AAAmDC,IAAAA,KAAK,EAAC;AAAzD,GAJI;AADQ,CAApB;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAACI,WAAW,CAACC,MAAb,CAAlD;;AAEA,QAAMa,uBAAuB,GAAGC,YAAY,IAAI;AAC5C,WAAOA,YAAY,CAACC,GAAb,CAAiBC,KAAK,iBACzB,QAAC,KAAD;AAEI,MAAA,UAAU,EAAEA,KAFhB;AAGI,MAAA,SAAS,EAAEF,YAHf;AAII,MAAA,kBAAkB,EAAEG;AAJxB,OACSD,KAAK,CAACf,EADf;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAQH,GATD;;AAWA,QAAMgB,mBAAmB,GAAG,CAAChB,EAAD,EAAKiB,MAAL,KAAgB;AACxCN,IAAAA,gBAAgB,CAAEO,SAAD,IAAe;AAC5B,UAAIC,QAAQ,GAAGD,SAAS,CAACE,KAAV,EAAf;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,OAAO,IAAI;AACxB,YAAIA,OAAO,CAACtB,EAAR,KAAeA,EAAnB,EAAuB;AACnB,cAAIsB,OAAO,CAACjB,WAAR,IAAuB,YAA3B,EAAyC;AACrCiB,YAAAA,OAAO,CAACrB,CAAR,GAAYgB,MAAZ;AACH,WAFD,MAEO,IAAIK,OAAO,CAACjB,WAAR,IAAuB,UAA3B,EAAuC;AAC1CkB,YAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAK,YAAAA,OAAO,CAACpB,CAAR,GAAYe,MAAZ;AACH;AACJ;AACJ,OATD;AAWA,aAAOE,QAAP;AACH,KAfe,CAAhB;AAgBH,GAjBD;;AAmBAxB,EAAAA,SAAS,CAAC,MAAM;AAACc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAAmB,GAA3B,CAAT;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA,cACKD,SAAS,IAAII,uBAAuB,CAACF,aAAD;AADzC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzCD;;GAAMH,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Piece from \"./Piece\";\nimport '../styling/Board.css'\n\nconst BOARD_SIZE = 6;\n\nconst TEST_PUZZLE = {\n    pieces: [\n        {id:0, x:0, y:2, h:1, w:2, orientation:'HORIZONTAL', color:'red'},\n        {id:1, x:2, y:0, h:3, w:1, orientation:'VERTICAL', color:'blue'},\n        {id:2, x:0, y:3, h:1, w:3, orientation:'HORIZONTAL', color:'green'},\n        {id:3, x:5, y:3, h:3, w:1, orientation:'VERTICAL', color:'teal'},\n    ]\n}\n\n\n/*\nconst TEST_PUZZLE = {\n    pieces: [\n        {id:0, x:0, y:0, h:1, w:2, orientation: 'HORIZONTAL', color:'red'},\n        {id:1, x:0, y:1, h:2, w:1, orientation: 'VERTICAL', color:'pink'},\n        {id:2, x:3, y:5, h:1, w:3, orientation: 'HORIZONTAL', color:'blue'},\n        {id:3, x:5, y:0, h:1, w:1, orientation: 'HORIZONTAL', color:'green'}\n    ]\n};\n*/\n\nconst Board = () => {\n    const [isMounted, setIsMounted] = useState(false);\n    const [piecesOnBoard, setPiecesOnBoard] = useState(TEST_PUZZLE.pieces);\n\n    const populateBoardFromPuzzle = puzzlePieces => {\n        return puzzlePieces.map(piece => (\n            <Piece \n                key={piece.id} \n                pieceProps={piece} \n                allPieces={puzzlePieces} \n                onFinishedDragging={updatePiecesOnBoard} \n            />)\n        )\n    }\n\n    const updatePiecesOnBoard = (id, newBin) => {\n        setPiecesOnBoard((prevState) => {\n            let newState = prevState.slice();\n\n            newState.forEach(element => {\n                if (element.id === id) {\n                    if (element.orientation == 'HORIZONTAL') {\n                        element.x = newBin;\n                    } else if (element.orientation == 'VERTICAL') {\n                        console.log(newBin)\n                        element.y = newBin;\n                    }\n                }\n            })\n\n            return newState;\n        })\n    }\n    \n    useEffect(() => {setIsMounted(true)})\n\n    return (\n        <div id='main-board' className='board'>\n            {isMounted && populateBoardFromPuzzle(piecesOnBoard)}\n        </div>\n    )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}