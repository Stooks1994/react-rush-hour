{"ast":null,"code":"var _jsxFileName = \"/Users/ian/react/rush-hour/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BoardRow from \"./BoardRow\";\nimport '../styling/Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_WIDTH = 6;\nconst BOARD_HEIGHT = 6;\n\nconst initializeEmptyBoard = () => {\n  let board = [];\n\n  for (let cols = 0; cols < BOARD_WIDTH; cols++) {\n    board.push([]);\n\n    for (let rows = 0; rows < BOARD_HEIGHT; rows++) {\n      board[cols].push({\n        x: cols,\n        y: rows,\n        isOccupied: false\n      });\n    }\n  }\n\n  return board;\n};\n\nconst Board = () => {\n  _s();\n\n  const [boardState, setBoardState] = useState(initializeEmptyBoard());\n\n  const updateBoardState = (xCoord, yCoord, isOccupied) => {\n    let newState = boardState;\n    newState[xCoord][yCoord].isOccupied = isOccupied;\n    setBoardState(newState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      className: \"board__tbody\",\n      children: [/*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[0],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[1],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[2],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[3],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[4],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoardRow, {\n        ids: boardState[5],\n        updateBoardState: updateBoardState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"otH/Zp/1pqlnOXKqF1ijNx0bMmI=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/ian/react/rush-hour/src/components/Board.js"],"names":["React","useState","BoardRow","BOARD_WIDTH","BOARD_HEIGHT","initializeEmptyBoard","board","cols","push","rows","x","y","isOccupied","Board","boardState","setBoardState","updateBoardState","xCoord","yCoord","newState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,sBAAP;;AAEA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGJ,WAA1B,EAAuCI,IAAI,EAA3C,EAA+C;AAC3CD,IAAAA,KAAK,CAACE,IAAN,CAAW,EAAX;;AAEA,SAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGL,YAA1B,EAAwCK,IAAI,EAA5C,EAAgD;AAC5CH,MAAAA,KAAK,CAACC,IAAD,CAAL,CAAYC,IAAZ,CAAiB;AAACE,QAAAA,CAAC,EAACH,IAAH;AAASI,QAAAA,CAAC,EAACF,IAAX;AAAiBG,QAAAA,UAAU,EAAC;AAA5B,OAAjB;AACH;AACJ;;AAED,SAAON,KAAP;AACH,CAZD;;AAcA,MAAMO,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACI,oBAAoB,EAArB,CAA5C;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBN,UAAjB,KAAgC;AACrD,QAAIO,QAAQ,GAAGL,UAAf;AACAK,IAAAA,QAAQ,CAACF,MAAD,CAAR,CAAiBC,MAAjB,EAAyBN,UAAzB,GAAsCA,UAAtC;AAEAG,IAAAA,aAAa,CAACI,QAAD,CAAb;AACH,GALD;;AAOA,sBACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEL,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEF,UAAU,CAAC,CAAD,CAAzB;AAA8B,QAAA,gBAAgB,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtBD;;GAAMH,K;;KAAAA,K;AAwBN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\nimport BoardRow from \"./BoardRow\"\nimport '../styling/Board.css'\n\nconst BOARD_WIDTH = 6;\nconst BOARD_HEIGHT = 6;\n\nconst initializeEmptyBoard = () => {\n    let board = []\n\n    for (let cols = 0; cols < BOARD_WIDTH; cols++) {\n        board.push([]);\n\n        for (let rows = 0; rows < BOARD_HEIGHT; rows++) {\n            board[cols].push({x:cols, y:rows, isOccupied:false});\n        }\n    }\n\n    return board\n}\n\nconst Board = () => {\n    const [boardState, setBoardState] = useState(initializeEmptyBoard());\n\n    const updateBoardState = (xCoord, yCoord, isOccupied) => {\n        let newState = boardState;\n        newState[xCoord][yCoord].isOccupied = isOccupied;\n\n        setBoardState(newState);\n    }\n\n    return (\n        <table className='board'>\n            <tbody className='board__tbody'>\n                <BoardRow ids={boardState[0]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[1]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[2]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[3]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[4]} updateBoardState={updateBoardState} />\n                <BoardRow ids={boardState[5]} updateBoardState={updateBoardState} />\n            </tbody>\n        </table>\n    )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}